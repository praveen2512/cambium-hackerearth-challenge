{"version":3,"sources":["store/reducers/authStore.js","store/reducers/index.js","components/auth/Login.js","store/actions/authenticate.js","App.js","Home.js","components/auth/SignUp.js","AppRouter.js","index.js"],"names":["initState","auth","authStore","state","arguments","length","undefined","action","type","payload","_action$payload","username","password","console","log","test","Object","objectSpread","reducers","combineReducers","Login","handleSubmit","e","preventDefault","_this","props","form","validateFields","err","values","params","target","value","authenticate","this","react_default","a","createElement","react_router","to","getFieldDecorator","Fragment","es_form","onSubmit","className","Item","rules","required","message","input","prefix","icon","style","color","placeholder","es_button","htmlType","React","Component","LoginForm","Form","create","name","connect","dispatch","formData","App","row","gutter","col","span","offset","card","auth_Login","Home","SignUp","AppRouter","react_router_dom","exact","path","component","store","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","applyMiddleware","thunk","ReactDOM","render","react_redux_es","AppRouter_AppRouter","document","getElementById"],"mappings":"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","file":"static/js/main.4c1664cb.chunk.js","sourcesContent":["let initState = {\r\n    auth : false\r\n}\r\n\r\nconst authStore = (state=initState,action)=>{\r\n    switch(action.type){\r\n        case 'GET':{\r\n            return state\r\n        }\r\n        case 'LOGIN':{\r\n            if(action.payload){\r\n                let {username,password} = action.payload\r\n                console.log(action.payload)\r\n                // eslint-disable-next-line\r\n                if (/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(username) && password!==''){\r\n                    console.log('authenticated')\r\n                    return {...state,auth:true}\r\n                }\r\n            }\r\n            return state\r\n        }\r\n        case 'SIGN_UP':{\r\n            return state;\r\n        }\r\n        default:{\r\n            return state\r\n        }\r\n    }\r\n}\r\n\r\nexport default authStore","import {combineReducers} from 'redux';\r\nimport authStore from './authStore'\r\n\r\nconst reducers = combineReducers({\r\n    authStore\r\n})\r\n\r\nexport default reducers","import React from 'react';\r\nimport {Form, Icon, Input, Button} from 'antd';\r\nimport {connect} from 'react-redux'\r\nimport {authenticate} from '../../store/actions/authenticate'\r\nimport {Redirect} from 'react-router-dom'\r\n  class Login extends React.Component {\r\n    handleSubmit = (e) => {\r\n      e.preventDefault();\r\n      this.props.form.validateFields((err, values) => {\r\n        if (!err) {\r\n          console.log('Received values of form: ', values);\r\n          let params = {}\r\n          params.username = e.target[0].value\r\n          params.password = e.target[1].value\r\n          this.props.authenticate(params)\r\n        }\r\n      });\r\n      \r\n    }\r\n    render() {\r\n        if(this.props.authStore.auth){\r\n            return <Redirect to=\"/home\"/>\r\n        }\r\n      const { getFieldDecorator } = this.props.form;\r\n      return (\r\n        <>\r\n        <Form onSubmit={this.handleSubmit} className=\"login-form\">\r\n        Sign in with email\r\n          <Form.Item>\r\n            {getFieldDecorator('username', {\r\n              rules: [{ required: true, message: 'Please input your username!' }],\r\n            })(\r\n              <Input prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />} placeholder=\"Username\" />\r\n            )}\r\n          </Form.Item>\r\n          <Form.Item>\r\n            {getFieldDecorator('password', {\r\n              rules: [{ required: true, message: 'Please input your Password!' }],\r\n            })(\r\n              <Input prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />} type=\"password\" placeholder=\"Password\" />\r\n            )}\r\n          </Form.Item>\r\n          <Form.Item>\r\n            <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\r\n              Log in\r\n            </Button>\r\n          </Form.Item>\r\n        </Form>\r\n        </>\r\n      );\r\n    }\r\n  }\r\n  const mapStateToProps = (state)=>{\r\n      return {\r\n        authStore : state.authStore\r\n      }\r\n  }\r\n  const mapDispatchToProps = (dispatch)=>{\r\n    return {\r\n        authenticate : (formData)=>dispatch(authenticate(formData))\r\n    }\r\n  }\r\n\r\n  const LoginForm = Form.create({ name: 'normal_login' })(Login);\r\n\r\n  export default connect(mapStateToProps,mapDispatchToProps)(LoginForm)","export const authenticate = (formData)=>{\r\n    return (dispatch)=>{\r\n        dispatch({\r\n            type:'LOGIN',\r\n            payload:formData\r\n        })\r\n    }\r\n}","import React from 'react';\nimport {Row,Col,Card} from 'antd'\nimport LoginForm from './components/auth/Login'\nclass App extends React.Component {\n  render(){\n    return (\n      <div className=\"App\">\n        <Row gutter={48}>\n          <Col span={12} offset={6}>\n            <Card>\n              <LoginForm/>\n            </Card>\n          </Col>\n        </Row>\n    </div>\n    );\n  }\n}\n\nexport default App;\n","import React, { Component } from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {Redirect} from 'react-router-dom'\r\nclass Home extends Component {\r\n  render() {\r\n    if(!this.props.authStore.auth){\r\n      return  <Redirect to=\"/\"/>\r\n    }\r\n    return (\r\n      <div>\r\n        Home\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state)=>{\r\n    return {\r\n      authStore : state.authStore\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,null)(Home)\r\n\r\n","import React, { Component } from 'react'\r\nimport {connect} from 'react-redux'\r\nclass SignUp extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        SignUp\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state)=>{\r\n    return {\r\n      authStore : state.authStore\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch)=>{\r\n  return {\r\n      \r\n  }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(SignUp)","import React, { Component } from 'react'\r\nimport {BrowserRouter,Switch,Route} from 'react-router-dom'\r\nimport App from './App'\r\nimport Home from './Home'\r\nimport SignUp from './components/auth/SignUp'\r\nexport default class AppRouter extends Component {\r\n  render() {\r\n    return (\r\n      <BrowserRouter>\r\n        <Switch>\r\n          <Route exact path=\"/\" component={App}/>\r\n          <Route path=\"/home\" component={Home}/>\r\n          <Route path=\"/signup\" component={SignUp}/>\r\n        </Switch>\r\n      </BrowserRouter>\r\n    )\r\n  }\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport thunk from 'redux-thunk';\nimport {Provider} from 'react-redux'\nimport {createStore,applyMiddleware,compose} from 'redux';\nimport reducers from './store/reducers/index'\nimport AppRouter from './AppRouter';\nimport './App.css'\n\nconst componseEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\nlet store = {}\nif(process.env.NODE_ENV === 'production'){\n    store = createStore(reducers,applyMiddleware(thunk))\n}else{\n    store = createStore(reducers,componseEnhancers(applyMiddleware(thunk)))\n}\n\nReactDOM.render(<Provider store={store}><AppRouter/></Provider>, document.getElementById('root'));\n\n"],"sourceRoot":""}